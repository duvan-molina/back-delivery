# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type user {
  id: ID!
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  phoneNumber: String!
  address: String!
  orders: [Order!]
  creation_date: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Order {
  id: ID!
  quantity: Float!
  stateRequested: String!
  user: user!
  products: [Product!]!
  userId: ID!
  creation_date: DateTime!
}

type Gallery {
  id: ID!
  imagenUrl: String!
  product: Product!
}

type Product {
  id: ID!
  title: String!
  description: String!
  price: Float!
  gallery: [Gallery!]
  unit: Int
  slug: String
  creation_date: DateTime!
}

type ProductsConnection {
  items: [Product!]!
  totalCount: Int!
  hasMore: Boolean!
}

type UserType {
  id: String!
  email: String!
  firstName: String!
  lastName: String!
  phoneNumber: String!
  address: String!
}

type ErrorsType {
  path: String
  messages: String
}

type Query {
  login(email: String!, password: String!): String!

  """Get all the products"""
  products(limit: Int! = 12, offset: Int! = 0, searchText: String): ProductsConnection!
  product(productId: ID!): Product!
  orders: [Order!]!
  order(id: ID!): Order!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): user!
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(updateProductInput: UpdateProductInput!): Product!
  removeProduct(id: Int!): Product!

  """create orders"""
  createOrder(createOrderInput: [CreateOrderInput!]!): [Order!]!
}

input CreateUserInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  phoneNumber: String!
  address: String!
}

input CreateProductInput {
  title: String!
  description: String!
  slug: String
  price: Float!
  unit: Float
}

input UpdateProductInput {
  title: String
  description: String
  slug: String
  price: Float
  unit: Float
  id: ID!
}

input CreateOrderInput {
  productId: [ID!]!
  stateRequested: String! = "preparing"
  quantity: Int
}